7/11/2019
JP
-Added trimSplit
-Não percebi o uso do valid && na funcao validAddress. Não se pode omitir isso?
-upper() foi para o utils
-class InvalidAddress added
-operator>> Date changed
-validAddress não está completa
-Construtor e destrutor do sistema

COMMIT 19:24

--------------------------------------------------------------
7/11/2019
JR
-Comentei a trimSplit porque a split ja faz isso e a split overloaded pode fazer se assim quiseres nomeadamente,
se passares como argumento qualquer string que tenha um espaço. Por exemplo: split(string,"&= ."), neste caso a string ja
vai ser split e trimmed.
-o valid && basicamente altera o valor do valid para false caso a segunda condição seja falsa assim tu podes testar
se é um valid address retornando apenas o valid.
-mudei o valid address de forma a usar a util isnum() que permite substituir todos os for loops.

COMMIT 23:48

--------------------------------------------------------------
8/11/2019
JP
-Adicionei atributo code a todos as classes evento museu e card. Isto serve para podermos ter um parametro de ordenação nos vetores, e podermos usar binarySearch nas pesquisas. O valor em code e atribuido por a variavel global correspondente para cada classe que e incrementada sempre que adicionamos um novo objeto ao vetor correspondente.
-Mudei os classDiagram no visio, pus o system direito.
-O construtor system le todos os ficheiros. Cada objeto está escrito numa linha só no respetivo ficheiro. Fica pouco legível para nós mas é mais facil de implementar.(Ainda a implementar)

COMMIT 11:26

--------------------------------------------------------------
8/11/2019
JR
-Função trim overloaded para dar trim a vetores de strings pode retornar um vetor trimmed ou o vetor pode ser passado por
referência.
